import Head from 'next/head';
import styles from '../styles/Home.module.css';
import Banner from '../components/Banner';
import Image from 'next/image';
import Card from '../components/Card';
import { fetchStores } from '../lib/fetch-stores';
import useLocation from '../hooks/use-location';
import { useEffect, useContext } from 'react';
import { ACTION_TYPES, StoreContext } from '../lib/store-context';

export async function getStaticProps(context) {
  return {
    props: {
      stores: await fetchStores(),
    },
  };
}

export default function Home({ stores }) {
  const { errMessage, loading, getLocation } = useLocation();
  const { state, dispatch } = useContext(StoreContext);

  const storesNearby = state.stores;

  useEffect(() => {
    async function fetchAll() {
      if (state.latlong !== '') {
        const response = await fetch(
          `/api/get-stores-nearby?latlong=${state.latlong}&limit=6`
        );
        const stores = await response.json();
        dispatch({
          type: ACTION_TYPES.SET_STORES,
          payload: stores,
        });
      }
    }
    fetchAll();
  }, [state.latlong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Banner
          buttonText="View stores nearby"
          loading={loading}
          onClick={() => getLocation()}
        />
        {errMessage && <p>Something went wrong: {errMessage}</p>}
        <div className={styles.heroImage}>
          <Image src="/static/hero-image.png" width={700} height={400}  alt='hero image'/>
        </div>

        {storesNearby.length > 0 && (
          <>
            <h2 className={styles.heading2}>Stores Nearby</h2>
            <div className={styles.cardLayout}>
              {storesNearby.map((store) => {
                return (
                  <Card
                    key={store.id}
                    name={store.name}
                    href={`/coffee-store/${store.id}`}
                    imgUrl={store.imgUrl}
                    className={styles.card}
                  />
                );
              })}
            </div>
          </>
        )}

        {stores.length > 0 && (
          <>
            <h2 className={styles.heading2}>Toronto Stores</h2>
            <div className={styles.cardLayout}>
              {stores.map((store) => {
                return (
                  <Card
                    key={store.id}
                    name={store.name}
                    href={`/coffee-store/${store.id}`}
                    imgUrl={store.imgUrl}
                    className={styles.card}
                  />
                );
              })}
            </div>
          </>
        )}
      </main>
    </div>
  );
}
